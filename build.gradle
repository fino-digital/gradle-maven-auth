plugins {
	id 'java'
	id 'java-gradle-plugin'

	// for publishing to plugin portal
	id 'com.gradle.plugin-publish' version '1.2.1'

	// for publishing snapshots
	id 'maven-publish'
	id 'org.hibernate.build.maven-repo-auth' version '3.0.4'
}

ext {
	pluginId = 'digital.fino.build.gradle-maven-auth'
	pluginVersion = '4.1.0'
}

group = 'digital.fino.build'
version = ext.pluginVersion

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

defaultTasks 'test'

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.dom4j:dom4j:2.1.4')
	implementation('org.sonatype.plexus:plexus-sec-dispatcher:1.4')
	implementation('org.codehaus.plexus:plexus-container-default:2.1.1')

	testImplementation('uk.org.webcompere:system-stubs-jupiter:2.1.6')
	testImplementation('org.junit.jupiter:junit-jupiter:5.10.1')
}

gradlePlugin {
	website = 'https://github.com/fino-digital/gradle-maven-auth'
	vcsUrl = 'https://github.com/fino-digital/gradle-maven-auth'

	plugins {
		mavenAuthPlugin {
			id = project.pluginId
			displayName = 'Applies security defined for a repository in Maven\'s settings.xml file to MavenRepository elements in a Gradle build - both upload and download'
			description = 'Updated version of org.hibernate.build.maven-repo-auth -- Applies security defined for a repository in Maven\'s settings.xml file to MavenRepository elements in a Gradle build - both upload and download'
			implementationClass = 'org.hibernate.build.publish.auth.maven.MavenRepoAuthPlugin'
			tags.set(['publish','upload','maven','auth','repository'])
		}
	}
}

if ( version.toString().endsWith( '-SNAPSHOT' ) ) {
	System.err.println( 'SNAPSHOT version detected - not publishing unreleased version' )
	tasks.publishPlugins.enabled = false
}

tasks.register('compile') {
	dependsOn tasks.compileJava, tasks.compileTestJava
}

test {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs << "-Xlint:unchecked"
}

javadoc {
	options.addStringOption( 'Xdoclint:none', '-quiet' )
}

wrapper {
	// Version is set using the wrapper task's `--gradle-version` property on the command line.
	// See README for more info
	distributionType = Wrapper.DistributionType.ALL
}
