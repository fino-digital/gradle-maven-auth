plugins {
	id 'java'
	id 'java-gradle-plugin'

	// for publishing to plugin portal
	id 'com.gradle.plugin-publish' version '0.11.0'
	id "nu.studer.credentials" version "2.1"

	// for publishing snapshots
	id 'maven-publish'
	id 'org.hibernate.build.maven-repo-auth' version '3.0.3'

	id 'idea'
	id 'eclipse'
}

ext {
	pluginId = 'org.hibernate.build.maven-repo-auth'
	pluginVersion = '3.0.4-SNAPSHOT'

	//noinspection GrUnresolvedAccess
	publishKey = credentials.'hibernate.gradle.publish.key'
	//noinspection GrUnresolvedAccess
	publishSecret = credentials.'hibernate.gradle.publish.secret'

	project.setProperty( 'gradle.publish.key', ext.publishKey )
	project.setProperty( 'gradle.publish.secret', ext.publishSecret )
}

group = 'org.hibernate.build'
version = ext.pluginVersion

sourceCompatibility = 1.8
targetCompatibility = 1.8

defaultTasks 'test'

repositories {
    mavenCentral()
}

dependencies {
    compile 'dom4j:dom4j:1.6.1@jar'
	compile 'org.sonatype.plexus:plexus-sec-dispatcher:1.3'
	compile 'org.codehaus.plexus:plexus-container-default:1.0.0'

	testCompile 'com.github.stefanbirkner:system-rules:1.19.0'
	testCompile 'junit:junit:4.12'
}

gradlePlugin {
	plugins {
		profilesPlugin {
			id = project.pluginId
			implementationClass = 'org.hibernate.build.publish.auth.maven.MavenRepoAuthPlugin'
		}
	}
}

pluginBundle {
	website = 'https://github.com/hibernate/gradle-maven-publish-auth'
	vcsUrl = 'https://github.com/hibernate/gradle-maven-publish-auth'
	tags = ['publish','upload','maven','auth','repository']

	plugins {
		profilesPlugin {
			id = project.pluginId
			displayName = 'Applies security defined for a repository in Maven\'s settings.xml file to MavenRepository elements in a Gradle build - both upload and download'
			description = 'Applies security defined for a repository in Maven\'s settings.xml file to MavenRepository elements in a Gradle build - both upload and download'
		}
	}
}

tasks.publishPlugins {
	doFirst {
		if ( project.publishKey == null ) {
			throw new RuntimeException( "`hibernate.gradle.publish.key` not found" )
		}
		if ( project.publishKey == null ) {
			throw new RuntimeException( "`hibernate.gradle.publish.secret` not found" )
		}
	}
}

task compile
tasks.compile.dependsOn tasks.compileJava, tasks.compileTestJava

idea {
	project {
		languageLevel = '1.8'
	}
	module {
		downloadSources = true
	}
}

ideaModule {
}

task copyResourcesToIntelliJOutFolder(dependsOn: tasks.processTestResources) {
	doLast {
		copy {
			from "$buildDir/resources/test"
			into 'out/test/resources'
		}
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:unchecked"
}

javadoc {
	options.addStringOption( 'Xdoclint:none', '-quiet' )
}

wrapper {
	// Version is set using the wrapper task's `--gradle-version` property on the command line.
	// See README for more info
	distributionType = Wrapper.DistributionType.ALL
}
