
plugins {
	id 'java'
	id 'java-gradle-plugin'
	id 'com.gradle.plugin-publish' version '0.11.0'
	id 'idea'
	id 'eclipse'
}

// NOTE : plugins published to the Gradle Plugin Portal automatically
// have `gradle.plugin.` prepended to their group name.
//
// It does allow that to be overridden, but then publishing requires
// manual intervention from Gradle team to approve...  not worth the
// hassle
//
// So long story short, not putting "gradle" in groupName here

group = 'org.hibernate.build'
version = '3.0.3'

sourceCompatibility = 1.8
targetCompatibility = 1.8

defaultTasks 'test'

repositories {
    mavenCentral()
}

dependencies {
    compile 'dom4j:dom4j:1.6.1@jar'
	compile 'org.sonatype.plexus:plexus-sec-dispatcher:1.3'
	compile 'org.codehaus.plexus:plexus-container-default:1.0.0'

	testCompile 'com.github.stefanbirkner:system-rules:1.19.0'
	testCompile 'junit:junit:4.12'
}

gradlePlugin {
	plugins {
		profilesPlugin {
			id = 'org.hibernate.build.maven-repo-auth'
			implementationClass = 'org.hibernate.build.publish.auth.maven.MavenRepoAuthPlugin'
		}
	}
}

pluginBundle {
	website = 'https://github.com/sebersole/gradle-maven-publish-auth'
	vcsUrl = 'https://github.com/sebersole/gradle-maven-publish-auth'
	tags = ['publish','upload','maven','auth','repository']

	plugins {
		profilesPlugin {
			id = 'org.hibernate.build.maven-repo-auth'
			displayName = 'Applies security defined for a repository in Maven\'s settings.xml file to MavenRepository elements in a Gradle build - both upload and download'
			description = 'Applies security defined for a repository in Maven\'s settings.xml file to MavenRepository elements in a Gradle build - both upload and download'
		}
	}
}

task compile
tasks.compile.dependsOn tasks.compileJava, tasks.compileTestJava

idea {
	project {
		languageLevel = '1.8'
	}
	module {
		downloadSources = true
	}
}

ideaModule {
}

task copyResourcesToIntelliJOutFolder(dependsOn: tasks.processTestResources) {
	doLast {
		copy {
			from "$buildDir/resources/test"
			into 'out/test/resources'
		}
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:unchecked"
}

javadoc {
	options.addStringOption( 'Xdoclint:none', '-quiet' )
}

wrapper {
	// Version is set using the wrapper task's `--gradle-version` property on the command line.
	// See README for more info
	distributionType = Wrapper.DistributionType.ALL
}
